name: Deploy

on:
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Copy repository contents via scp
      uses: appleboy/scp-action@master
      with:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        source: "."
        target: "/home/${{ secrets.USERNAME }}/python-code-check-system"

    - name: Executing remote command
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        script: |
          set -e
          echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π Python Code Check System..."
          
          cd python-code-check-system/
          
          # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É —Ä–µ–ª–∏–∑–∞ –≤ —à–∞–±–ª–æ–Ω–µ
          echo "üìÖ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É —Ä–µ–ª–∏–∑–∞..."
          date=$(git log --pretty=format:"%ad" --date=format:"%d.%m.%Y %H:%M" -n 1)
          search="RELEASE_DATE_TEMPLATE"
          filename="./umschool/templates/python_code_check_system/base.html"
          if [ -f "$filename" ]; then
            sed -i "s/$search/$date/" $filename
            echo "‚úÖ –î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: $date"
          else
            echo "‚ö†Ô∏è –§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—Ç—ã"
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
          if [ ! -f ".env" ]; then
            echo "üìù –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
            cp env.example .env
            echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
          fi
          
          # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
          echo "üìÅ –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
          mkdir -p umschool/media umschool/staticfiles
          echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
          echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
          docker compose down || true
          
          # –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã
          echo "üî® –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ Docker –æ–±—Ä–∞–∑—ã..."
          docker compose build --no-cache
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
          echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
          docker compose up -d
          
          # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
          echo "‚è≥ –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
          sleep 30
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
          docker compose ps
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Nginx –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
          echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º Nginx..."
          if ! docker compose ps | grep -q "nginx.*Up"; then
            echo "‚ùå Nginx –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
            docker compose logs nginx
            exit 1
          else
            echo "‚úÖ Nginx –∑–∞–ø—É—â–µ–Ω"
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤
          echo "üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."
          if docker compose exec -T server python manage.py check --deploy; then
            echo "‚úÖ Django –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
          else
            echo "‚ùå –û—à–∏–±–∫–∞ –≤ Django –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
            docker compose logs server
            exit 1
          fi
          
          # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
          echo "üìÅ –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã..."
          docker compose exec -T server python manage.py collectstatic --noinput
          
          # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx –µ—Å–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
          echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º Nginx..."
          if ! systemctl is-active --quiet nginx; then
            echo "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx..."
            if [ -f "nginx.conf" ] && [ -f "setup-nginx.sh" ]; then
              chmod +x setup-nginx.sh
              sudo ./setup-nginx.sh
            else
              echo "‚ö†Ô∏è –§–∞–π–ª—ã Nginx –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É"
            fi
          else
            echo "‚úÖ Nginx —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
          fi
          
          # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
          echo "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
          if curl -f http://localhost:8000/ > /dev/null 2>&1; then
            echo "‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ Nginx"
          else
            echo "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ Nginx"
            docker compose logs nginx
            docker compose logs server
            exit 1
          fi
          
          echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
          echo "üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://${{ secrets.HOST }}:8000"
