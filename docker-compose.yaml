services:
  pgdb:
    image: postgres:16.3
    env_file:
      - .env
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7.0.15-alpine3.20
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  celery:
    build:
      context: umschool
    command: >
      sh -c "celery -A umschool worker -l info"
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - REDIS_URI=${REDIS_URI}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,158.160.28.235
      - CSRF_TRUSTED_ORIGINS=http://158.160.28.235:8000,http://localhost:8000
    depends_on:
      redis:
        condition: service_healthy
      pgdb:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./umschool:/umschool
    user: appuser

  test:
    build:
      context: umschool
    command: python manage.py test --noinput
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - REDIS_URI=${REDIS_URI}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,158.160.28.235
      - CSRF_TRUSTED_ORIGINS=http://158.160.28.235:8000,http://localhost:8000
    depends_on:
      redis:
        condition: service_healthy
      pgdb:
        condition: service_healthy
    volumes:
      - ./umschool:/umschool

  server:
    build:
      context: umschool
    restart: unless-stopped
    command: >
      sh -c "./entrypoint.sh"
    ports:
      - "8001:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - REDIS_URI=${REDIS_URI}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,158.160.28.235
      - CSRF_TRUSTED_ORIGINS=http://158.160.28.235:8000,http://localhost:8000
    depends_on:
      redis:
        condition: service_healthy
      pgdb:
        condition: service_healthy
    volumes:
      - ./umschool:/umschool
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "8000:8000"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./umschool/staticfiles:/umschool/staticfiles
      - ./umschool/static:/umschool/static
      - ./umschool/media:/umschool/media
    depends_on:
      server:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdbdata: null
